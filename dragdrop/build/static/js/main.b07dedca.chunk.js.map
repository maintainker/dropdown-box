{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","inputValue","setInputValue","dragging","setDragging","squareDates","setSquareDatas","colorBoxRef","useRef","handleDragLeave","event","current","className","onSubmit","e","preventDefault","prev","color","alert","type","value","onChange","target","placeholder","style","marginTop","map","el","idx","draggable","display","background","width","height","marginRight","onDragStart","handleDrapStart","onDragOver","stopPropagation","onDrop","thisIdx","changeColor","newSquare","filter","_","undefined","length","handledrop","onDragEnter","slice","handleDragEnter","onDragLeave","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b07dedca.chunk.js","sourcesContent":["import React, { FormEvent, useRef, useState } from \"react\";\n\nconst App: React.FC = () => {\n  // const inputRef = useRef<HTMLInputElement>(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [dragging, setDragging] = useState<number | null>(null);\n  const [squareDates, setSquareDatas] = useState<{ color: string }[]>([]);\n  const colorBoxRef = useRef<{ color: string }[]>(squareDates);\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (inputValue !== \"\") {\n      setSquareDatas((prev) => [...prev, { color: inputValue }]);\n      setInputValue(\"\");\n    } else {\n      alert(\"색을 입력해주세요\");\n    }\n  };\n  const handleDrapStart = (idx: number, e: React.DragEvent<HTMLDivElement>) => {\n    setDragging(idx);\n  };\n  const handleDragEnter = (\n    idx: number,\n    event: React.DragEvent<HTMLDivElement>,\n  ) => {\n    setSquareDatas((prev) => {\n      colorBoxRef.current = prev;\n      if (typeof dragging === \"number\" && idx < dragging)\n        return [\n          ...prev.slice(0, idx),\n          { color: \"transparent\" },\n          ...prev.slice(idx),\n        ];\n      if (typeof dragging === \"number\" && idx > dragging)\n        return [\n          ...prev.slice(0, idx + 1),\n          { color: \"transparent\" },\n          ...prev.slice(idx + 1),\n        ];\n      return prev;\n    });\n  };\n\n  const handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n    setSquareDatas([...colorBoxRef.current]);\n  };\n  const handledrop = (\n    event: React.DragEvent<HTMLDivElement>,\n    thisIdx: number,\n  ) => {\n    let changeColor: { color: string };\n    let newSquare: typeof changeColor[];\n    if (typeof dragging === \"number\" && dragging >= thisIdx) {\n      changeColor = squareDates[(dragging as number) + 1];\n      newSquare = squareDates.filter(\n        (_, idx) => idx !== (typeof dragging === \"number\" ? dragging : 0) + 1,\n      );\n\n      newSquare[thisIdx] = changeColor;\n      colorBoxRef.current = newSquare;\n      setSquareDatas(newSquare);\n      setDragging(null);\n    } else if (typeof dragging === \"number\") {\n      changeColor = squareDates[dragging as number];\n      newSquare = squareDates.filter(\n        (_, idx) =>\n          idx !== (typeof dragging === \"number\" ? dragging : 0) &&\n          _ !== undefined,\n      );\n      newSquare[thisIdx] = changeColor;\n      if (newSquare.length > colorBoxRef.current.length) {\n        newSquare = newSquare.filter((_, idx) => idx !== newSquare.length - 2);\n      }\n      colorBoxRef.current = newSquare;\n      setSquareDatas(newSquare);\n      setDragging(null);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"색을 입력해주세요\"\n        />\n      </form>\n\n      <section style={{ marginTop: \"20px\" }}>\n        {[...squareDates, { color: \"transparent\" }].map((el, idx) => (\n          <div\n            draggable\n            style={{\n              display: \"inline-block\",\n              background: el.color,\n              width: \"50px\",\n              height: \"50px\",\n              marginRight: \"20px\",\n            }}\n            onDragStart={(e) => handleDrapStart(idx, e)}\n            onDragOver={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n            onDrop={(e) => handledrop(e, idx)}\n            // onDragEnd={handleDragEnd}\n            onDragEnter={(e) => handleDragEnter(idx, e)}\n            onDragLeave={handleDragLeave}\n          ></div>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\nreportWebVitals();\n"],"sourceRoot":""}